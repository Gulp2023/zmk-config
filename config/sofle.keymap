/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        HoldChr: HoldChr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDCHR";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <17 29>;
        };
        mo_tog: mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TOG";
            bindings =
                <&mo>,
                <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    macros {
        AltTabAlt: AltTabAlt {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LALT> ,
                <&macro_tap &kp TAB> ,
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
      &HoldChr ESC GRAVE  &kp N1          &kp N2          &kp N3             &kp N4             &kp N5                               &kp N6                &kp N7     &kp N8    &kp N9         &kp N0     &HoldChr MINUS BACKSPACE
                 &kp TAB   &kp Q           &kp W           &kp E              &kp R              &kp T                                &kp Y                 &kp U      &kp I     &kp O          &kp P  &HoldChr LEFT_BRACKET ENTER
       &kp RIGHT_BRACKET   &kp A           &kp S           &kp D              &kp F              &kp G                                &kp H                 &kp J      &kp K     &kp L  &kp SEMICOLON               &kp APOSTROPHE
&mt LEFT_SHIFT BACKSLASH   &kp Z           &kp X           &kp C              &kp V              &kp B     &kp C_MUTE    &none        &kp N                 &kp M  &kp COMMA   &kp DOT       &kp FSLH  &mt RIGHT_SHIFT NON_US_HASH
                                  &mt LGUI LC(X)  &mt LALT LC(V)  &mt LCTRL LA(TAB)  &lt 1 LA(LS(TAB))  &kp BACKSPACE  &kp RET  &mo_tog 1 1  &mt LEFT_SHIFT SPACE   &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
         &trans         &kp F1     &kp F2           &kp F3     &kp F4                            &kp F5                             &kp F6        &kp F7     &kp F8         &kp F9    &kp F10  &HoldChr F11 BACKSPACE
&kp LS(LC(ESC))   &kp LG(PLUS)  &kp LC(N)      &kp LC(TAB)  &kp LC(Z)  &HoldChr LG(LC(RIGHT)) LC(LG(D))                        &kp PAGE_UP      &kp HOME     &kp UP        &kp END    &kp INS      &HoldChr F12 ENTER
  &kp LS(LC(N))  &kp LG(MINUS)  &kp LC(Q)  &kp LC(LS(TAB))  &kp LC(Y)  &HoldChr LC(LG(LEFT)) LG(LC(F4))                      &kp PAGE_DOWN      &kp LEFT   &kp DOWN      &kp RIGHT    &kp DEL           &kp BACKSPACE
 &kp LEFT_SHIFT      &kp LC(A)  &kp LC(X)        &kp LC(C)  &kp LC(V)                            &trans  &kp C_MUTE   &none     &AltTabAlt  &kp LA(LEFT)  &kp LC(N)  &kp LA(RIGHT)  &kp LC(W)                   &to 0
                                   &trans           &trans     &trans                            &trans      &trans  &trans         &trans        &trans     &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                     &trans    &trans    &trans     &trans   &trans    &trans
    &trans       &kp INS     &kp PSCRN   &kp K_CMENU        &trans        &trans                  &kp PG_UP    &trans    &kp UP     &trans   &kp N0    &trans
    &trans      &kp LALT     &kp LCTRL     &kp LSHFT        &trans      &kp CLCK                  &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL  &kp BSPC
    &trans    &kp K_UNDO     &kp K_CUT    &kp K_COPY   &kp K_PASTE        &trans  &trans  &trans     &trans    &trans    &trans     &trans   &trans    &trans
                                &trans        &trans        &trans        &trans  &trans  &trans     &tog 0    &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
